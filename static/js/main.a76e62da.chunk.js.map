{"version":3,"sources":["App.tsx","components/GoodsList/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goods","map","good","goodsFromServer","App","state","isReversed","sortType","NONE","handleReset","setState","this","shouldSortList","reorderedGoods","visibleGoods","sort","previousGood","currentGood","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","previousState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,wGCfQC,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SDFnBC,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAMM,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUT,EAASU,MAHvB,EAMEC,YAAc,WACZ,EAAKC,SAAS,CACZJ,YAAY,EACZC,SAAUT,EAASU,QATzB,4CAaE,WAAU,IAAD,OACP,EAAiCG,KAAKN,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdK,EAAiBL,IAAaT,EAASU,MAAQF,EAC/CO,EA5CH,SACLb,EADK,GAGM,IADTO,EACQ,EADRA,SAAUD,EACF,EADEA,WAENQ,EAAe,YAAId,GACtBe,MAAK,SAACC,EAAcC,GACnB,OAAQV,GACN,KAAKT,EAASoB,SACZ,OAAOF,EAAaG,cAAcF,GAEpC,KAAKnB,EAASsB,OACZ,OAAOJ,EAAaK,OAASJ,EAAYI,OAE3C,QACE,OAAO,MAIf,OAAOf,EACHQ,EAAaQ,UACbR,EAwBqBS,CAAkBpB,EAAiBQ,KAAKN,OAE/D,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYnB,IAAaT,EAASoB,WAGtCS,QAAS,kBAAM,EAAKjB,SAClB,CAAEH,SAAUT,EAASoB,YATzB,iCAeA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYnB,IAAaT,EAASsB,SAGtCO,QAAS,kBAAM,EAAKjB,SAClB,CAAEH,SAAUT,EAASsB,UATzB,4BAeA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAapB,IAGjBqB,QAAS,kBAAM,EAAKjB,UAAS,SAAAkB,GAAa,MAAK,CAC7CtB,YAAasB,EAActB,gBAT/B,qBAgBEM,GAEI,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAShB,KAAKF,YAHhB,sBAWR,cAAC,EAAD,CAAWT,MAAOa,WAhF1B,GAAyBgB,IAAMC,WEvD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a76e62da.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n): string[] {\n  const visibleGoods = [...goods]\n    .sort((previousGood, currentGood) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return previousGood.localeCompare(currentGood);\n\n        case SortType.LENGTH:\n          return previousGood.length - currentGood.length;\n\n        default:\n          return 0;\n      }\n    });\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const shouldSortList = sortType !== SortType.NONE || isReversed;\n    const reorderedGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={() => this.setState(\n              { sortType: SortType.ALPHABET },\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={() => this.setState(\n              { sortType: SortType.LENGTH },\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={() => this.setState(previousState => ({\n              isReversed: !previousState.isReversed,\n            }))}\n          >\n            Reverse\n          </button>\n\n          {\n            shouldSortList\n              && (\n                <button\n                  type=\"button\"\n                  className=\"button is-danger is-light\"\n                  onClick={this.handleReset}\n                >\n                  Reset\n                </button>\n              )\n          }\n        </div>\n\n        <GoodsList goods={reorderedGoods} />\n      </div>\n    );\n  }\n}\n","type Props = {\n  goods: string[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li data-cy=\"Good\" key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}